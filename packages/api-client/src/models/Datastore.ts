/* tslint:disable */
/* eslint-disable */
/**
 * Migration Planner API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: undefined
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Datastore
 */
export interface Datastore {
    /**
     * 
     * @type {string}
     * @memberof Datastore
     */
    type: string;
    /**
     * 
     * @type {number}
     * @memberof Datastore
     */
    totalCapacityGB: number;
    /**
     * 
     * @type {number}
     * @memberof Datastore
     */
    freeCapacityGB: number;
    /**
     * 
     * @type {string}
     * @memberof Datastore
     */
    vendor: string;
    /**
     * 
     * @type {string}
     * @memberof Datastore
     */
    diskId: string;
    /**
     * 
     * @type {boolean}
     * @memberof Datastore
     */
    hardwareAcceleratedMove: boolean;
}

/**
 * Check if a given object implements the Datastore interface.
 */
export function instanceOfDatastore(value: object): value is Datastore {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('totalCapacityGB' in value) || value['totalCapacityGB'] === undefined) return false;
    if (!('freeCapacityGB' in value) || value['freeCapacityGB'] === undefined) return false;
    if (!('vendor' in value) || value['vendor'] === undefined) return false;
    if (!('diskId' in value) || value['diskId'] === undefined) return false;
    if (!('hardwareAcceleratedMove' in value) || value['hardwareAcceleratedMove'] === undefined) return false;
    return true;
}

export function DatastoreFromJSON(json: any): Datastore {
    return DatastoreFromJSONTyped(json, false);
}

export function DatastoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): Datastore {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'totalCapacityGB': json['totalCapacityGB'],
        'freeCapacityGB': json['freeCapacityGB'],
        'vendor': json['vendor'],
        'diskId': json['diskId'],
        'hardwareAcceleratedMove': json['hardwareAcceleratedMove'],
    };
}

export function DatastoreToJSON(value?: Datastore | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'totalCapacityGB': value['totalCapacityGB'],
        'freeCapacityGB': value['freeCapacityGB'],
        'vendor': value['vendor'],
        'diskId': value['diskId'],
        'hardwareAcceleratedMove': value['hardwareAcceleratedMove'],
    };
}

