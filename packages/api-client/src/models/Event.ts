/* tslint:disable */
/* eslint-disable */
/**
 * Migration Planner API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: undefined
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EventData } from './EventData';
import {
    EventDataFromJSON,
    EventDataFromJSONTyped,
    EventDataToJSON,
} from './EventData';

/**
 * 
 * @export
 * @interface Event
 */
export interface Event {
    /**
     * 
     * @type {Date}
     * @memberof Event
     */
    createdAt: Date;
    /**
     * 
     * @type {Array<EventData>}
     * @memberof Event
     */
    data: Array<EventData>;
}

/**
 * Check if a given object implements the Event interface.
 */
export function instanceOfEvent(value: object): value is Event {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function EventFromJSON(json: any): Event {
    return EventFromJSONTyped(json, false);
}

export function EventFromJSONTyped(json: any, ignoreDiscriminator: boolean): Event {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['createdAt'])),
        'data': ((json['data'] as Array<any>).map(EventDataFromJSON)),
    };
}

export function EventToJSON(value?: Event | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'createdAt': ((value['createdAt']).toISOString()),
        'data': ((value['data'] as Array<any>).map(EventDataToJSON)),
    };
}

