/* tslint:disable */
/* eslint-disable */
/**
 * Migration Planner API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: undefined
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SourceAgentItem } from './SourceAgentItem';
import {
    SourceAgentItemFromJSON,
    SourceAgentItemToJSON,
} from './SourceAgentItem';
import type { Inventory } from './Inventory';
import {
    InventoryFromJSON,
    InventoryToJSON,
} from './Inventory';

/**
 * 
 * @export
 * @interface Source
 */
export interface Source {
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    id: string;
    /**
     * 
     * @type {Inventory}
     * @memberof Source
     */
    inventory?: Inventory;
    /**
     * 
     * @type {Date}
     * @memberof Source
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Source
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    name?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Source
     */
    onPremises: boolean;
    /**
     * 
     * @type {Array<SourceAgentItem>}
     * @memberof Source
     */
    agents?: Array<SourceAgentItem>;
}

/**
 * Check if a given object implements the Source interface.
 */
export function instanceOfSource(value: object): value is Source {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('onPremises' in value) || value['onPremises'] === undefined) return false;
    return true;
}

export function SourceFromJSON(json: any): Source {
    return SourceFromJSONTyped(json, false);
}

export function SourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Source {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'inventory': json['inventory'] == null ? undefined : InventoryFromJSON(json['inventory']),
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'name': json['name'] == null ? undefined : json['name'],
        'onPremises': json['onPremises'],
        'agents': json['agents'] == null ? undefined : ((json['agents'] as Array<any>).map(SourceAgentItemFromJSON)),
    };
}

export function SourceToJSON(value?: Source | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'inventory': InventoryToJSON(value['inventory']),
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
        'name': value['name'],
        'onPremises': value['onPremises'],
        'agents': value['agents'] == null ? undefined : ((value['agents'] as Array<any>).map(SourceAgentItemToJSON)),
    };
}

