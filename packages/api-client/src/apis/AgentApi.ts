/* tslint:disable */
/* eslint-disable */
/**
 * Migration Planner API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: undefined
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Agent,
} from '../models/index';
import {
    AgentFromJSON,
    AgentToJSON,
} from '../models/index';

export interface DeleteAgentRequest {
    id: string;
}

/**
 * AgentApi - interface
 * 
 * @export
 * @interface AgentApiInterface
 */
export interface AgentApiInterface {
    /**
     * delete an agent
     * @param {string} id ID of the agent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentApiInterface
     */
    deleteAgentRaw(requestParameters: DeleteAgentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Agent>>;

    /**
     * delete an agent
     */
    deleteAgent(requestParameters: DeleteAgentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Agent>;

    /**
     * list agents
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AgentApiInterface
     */
    listAgentsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Agent>>>;

    /**
     * list agents
     */
    listAgents(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Agent>>;

}

/**
 * 
 */
export class AgentApi extends runtime.BaseAPI implements AgentApiInterface {

    /**
     * delete an agent
     */
    async deleteAgentRaw(requestParameters: DeleteAgentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Agent>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling deleteAgent().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/agents/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AgentFromJSON(jsonValue));
    }

    /**
     * delete an agent
     */
    async deleteAgent(requestParameters: DeleteAgentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Agent> {
        const response = await this.deleteAgentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * list agents
     */
    async listAgentsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Agent>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/agents`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(AgentFromJSON));
    }

    /**
     * list agents
     */
    async listAgents(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Agent>> {
        const response = await this.listAgentsRaw(initOverrides);
        return await response.value();
    }

}
