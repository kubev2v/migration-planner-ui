name: Create a new release and update latest

on:
  release:
    types: [created]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare yarn@4.5.0 --activate

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build all packaged
        run: yarn all:build

      - name: Update latest release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push --delete origin latest || true
          git tag -f latest ${{ github.sha }}
          git push -f origin latest
          
          upload_url=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/latest" \
            | jq -r '.upload_url' | sed 's/{?name,label}//g')
          
          if [ "$upload_url" = "null" ]; then
            response=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
              -d '{"tag_name": "latest", "name": "Latest Release", "body": "This is always the latest release"}' \
              "https://api.github.com/repos/${{ github.repository }}/releases")
            upload_url=$(echo "$response" | jq -r '.upload_url' | sed 's/{?name,label}//g')
          fi
          
      - name: Configure npm credentials
        run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          
      - name: Lookup for workspaces to be published
        run: |
          declare -a LIBS=("api-client" "ioc" "agent-client")
          echo "LIBS=${LIBS[@]}" >> $GITHUB_ENV
          (IFS=,; printf 'The following workspaces will be published: [%s]\n' "${LIBS[*]}")

      - name: Configuring git
        run: |
          git config user.name '${{ github.actor }}'
          git config user.email '${{ github.actor }}@users.noreply.github.com'

      - name: Bump workspaces to ${{ github.ref_name }}
        run: |
          TAG_NAME="${{ github.event.release.tag_name }}"
          VERSION="${TAG_NAME#v}"
          for LIB in $(echo ${LIBS}); do
            echo Bumping @migration-planner-ui/"${LIB}"
            jq --arg ver "$VERSION" '.version = $ver' packages/"${LIB}"/package.json > packages/"${LIB}"/package.tmp.json
            mv packages/"${LIB}"/package.tmp.json packages/"${LIB}"/package.json
          done

      - name: Publish workspaces to NPM
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          yarn config set npmScopes.migration-planner-ui.npmAuthToken $NPM_AUTH_TOKEN
          for LIB in $(echo ${LIBS}); do
            printf 'Publishing @migration-planner-ui/%s\n' "${LIB}"
            yarn workspace @migration-planner-ui/${LIB} npm publish            
          done
